{"version":3,"sources":["webpack:///./src/components/Tag.js","webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/core-js/modules/es6.reflect.construct.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./src/templates/infographic-post.js","webpack:///./src/graphics/InfoGraphic.js"],"names":["Tag","tags","props","length","map","tag","key","className","to","MDXRenderer","require","module","$export","create","aFunction","anObject","isObject","fails","bind","rConstruct","Reflect","construct","NEW_TARGET_BUG","F","ARGS_BUG","S","Target","args","newTarget","arguments","$args","push","apply","proto","prototype","instance","Object","result","Function","call","React","useMDXComponents","mdx","useMDXScope","scope","components","children","mdxComponents","mdxScope","End","fullScope","keys","values","fn","shortcodes","InfoGraphic","src","alt","href","target","InfoGraphicPostTemplate","render","post","this","data","siteTitle","site","siteMetadata","title","Layout","location","frontmatter","description","seo","intro","style","scale","display","marginBottom","rhythm","date","body","Component","pageQuery"],"mappings":"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","file":"component---src-templates-infographic-post-js-033b1898594fba4ab448.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\n\nfunction Tag({ tags, ...props }) {\n  if (!tags || tags.length === 0) {\n    return null\n  }\n\n  return (\n    <div {...props}>\n      {tags.map(tag => (\n        <Link key={tag} className=\"badge badge-primary\" to={`/tags/${tag}/`}>\n          {tag}\n        </Link>\n      ))}\n    </div>\n  )\n}\n\nexport default Tag\n","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])\nvar $export = require('./_export');\nvar create = require('./_object-create');\nvar aFunction = require('./_a-function');\nvar anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar fails = require('./_fails');\nvar bind = require('./_bind');\nvar rConstruct = (require('./_global').Reflect || {}).construct;\n\n// MS Edge supports only 2 arguments and argumentsList argument is optional\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\nvar NEW_TARGET_BUG = fails(function () {\n  function F() { /* empty */ }\n  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);\n});\nvar ARGS_BUG = !fails(function () {\n  rConstruct(function () { /* empty */ });\n});\n\n$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {\n  construct: function construct(Target, args /* , newTarget */) {\n    aFunction(Target);\n    anObject(args);\n    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);\n    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);\n    if (Target == newTarget) {\n      // w/o altered newTarget, optimization for 0-4 arguments\n      switch (args.length) {\n        case 0: return new Target();\n        case 1: return new Target(args[0]);\n        case 2: return new Target(args[0], args[1]);\n        case 3: return new Target(args[0], args[1], args[2]);\n        case 4: return new Target(args[0], args[1], args[2], args[3]);\n      }\n      // w/o altered newTarget, lot of arguments case\n      var $args = [null];\n      $args.push.apply($args, args);\n      return new (bind.apply(Target, $args))();\n    }\n    // with altered newTarget, not support built-in constructors\n    var proto = newTarget.prototype;\n    var instance = create(isObject(proto) ? proto : Object.prototype);\n    var result = Function.apply.call(Target, instance, args);\n    return isObject(result) ? result : instance;\n  }\n});\n","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport { MDXRenderer } from 'gatsby-plugin-mdx'\nimport { MDXProvider } from '@mdx-js/react'\n\nimport Layout from '../components/Layout'\nimport SEO from '../components/seo'\nimport { rhythm, scale } from '../utils/typography'\nimport Tag from '../components/Tag'\nimport InfoGraphic from '../graphics/InfoGraphic'\n\nconst shortcodes = {\n  InfoGraphic,\n}\n\nclass InfoGraphicPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.mdx\n    const siteTitle = this.props.data.site.siteMetadata.title\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.seo}\n        />\n        <div className=\"content-container\">\n          <h2>{post.frontmatter.title}</h2>\n          <h3 className=\"my-0 font-weight-normal\">{post.frontmatter.intro}</h3>\n          <p\n            className=\"text-muted\"\n            style={{\n              ...scale(-1 / 5),\n              display: `block`,\n              marginBottom: rhythm(1),\n            }}\n          >\n            {post.frontmatter.date}\n          </p>\n          <Tag tags={post.frontmatter.tags} />\n          <MDXProvider components={shortcodes}>\n            <MDXRenderer>{post.body}</MDXRenderer>\n          </MDXProvider>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default InfoGraphicPostTemplate\n\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    mdx(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        intro\n        tags\n      }\n      body\n    }\n  }\n`\n","/** @jsx jsx */\nimport { jsx } from 'theme-ui'\n\nfunction InfoGraphic(props) {\n  const { src, alt } = props.children.props.children.props\n\n  return (\n    <div className=\"graphic-contianer pt-5 pb-3\">\n      <a href={src} target=\"_blank\">\n        <img src={src} alt={alt} className=\"img-fluid\" />\n      </a>\n    </div>\n  )\n}\n\nexport default InfoGraphic\n"],"sourceRoot":""}