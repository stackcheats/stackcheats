{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["BlogIndex","render","data","this","props","siteTitle","site","siteMetadata","title","posts","allMdx","edges","tags","tagCollection","group","location","keywords","className","slice","map","node","frontmatter","fields","slug","key","style","marginBottom","rhythm","textDecoration","boxShadow","to","date","short","width","href","medium","size","sort","a","b","totalCount","fieldValue","backgroundColor","bgcolor","React","Component","pageQuery"],"mappings":"+OASMA,E,gLACJC,OAAA,WAAU,IACAC,EAASC,KAAKC,MAAdF,KACFG,EAAYH,EAAKI,KAAKC,aAAaC,MACnCC,EAAQP,EAAKQ,OAAOC,MACpBC,EAAOV,EAAKW,cAAcC,MAEhC,OACE,kBAAC,IAAD,CAAQC,SAAUZ,KAAKC,MAAMW,SAAUP,MAAOH,GAC5C,kBAAC,IAAD,CACEG,MAAM,cACNQ,SAAU,CAAC,cAAD,wCAIZ,yBAAKC,UAAU,wDACZR,EAAMS,MAAM,EAAG,GAAGC,KAAI,YAAe,IAAZC,EAAW,EAAXA,KAClBZ,EAAQY,EAAKC,YAAYb,OAASY,EAAKE,OAAOC,KACpD,OACE,yBAAKN,UAAU,sBAAsBO,IAAKJ,EAAKE,OAAOC,MACpD,yBAAKN,UAAU,gCACb,wBACEA,UAAU,aACVQ,MAAO,CACLC,aAAcC,YAAO,EAAI,KAG3B,kBAAC,OAAD,CACEV,UAAU,YACVQ,MAAO,CACLG,eAAe,OACfC,UAAU,QAEZC,GAAIV,EAAKE,OAAOC,MAEff,IAGL,2BAAOS,UAAU,cAAcG,EAAKC,YAAYU,MAChD,uBAAGd,UAAU,kBAAkBG,EAAKC,YAAYW,OAChD,yBAAKf,UAAU,WACb,kBAAC,OAAD,CACEA,UAAU,uBACVQ,MAAO,CACLQ,MAAO,eAETH,GAAIV,EAAKE,OAAOC,MALlB,aASA,uBACEN,UAAU,0BACVQ,MAAO,CACLQ,MAAO,eAETC,KAAMd,EAAKC,YAAYc,QAEvB,kBAAC,SAAD,CAAQC,KAAM,aAU5B,yBAAKnB,UAAU,QACZL,EACEyB,MAAK,SAACC,EAAGC,GACR,OAAOA,EAAEC,WAAaF,EAAEE,cAEzBtB,MAAM,EAAG,IACTC,KAAI,YAAiC,IAA9BsB,EAA6B,EAA7BA,WAAYD,EAAiB,EAAjBA,WAClB,GAAIA,EAAa,EACf,OACE,kBAAC,OAAD,CAAMhB,IAAKiB,EAAYX,GAAE,SAAWW,GAClC,0BAAMxB,UAAU,gCACbwB,EADH,IACe,+BAAKD,SAShC,yBAAKvB,UAAU,qBACZR,EAAMU,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNZ,EAAQY,EAAKC,YAAYb,OAASY,EAAKE,OAAOC,KACpD,OACE,yBACEN,UAAU,sBACVO,IAAKJ,EAAKE,OAAOC,KACjBE,MAAO,CACLiB,gBAAiBtB,EAAKC,YAAYsB,UAGpC,yBAAK1B,UAAU,aACb,wBACEA,UAAU,aACVQ,MAAO,CACLC,aAAcC,YAAO,EAAI,KAG3B,kBAAC,OAAD,CACEV,UAAU,YACVQ,MAAO,CACLG,eAAe,OACfC,UAAU,QAEZC,GAAIV,EAAKE,OAAOC,MAEff,IAGL,2BAAOS,UAAU,cAAcG,EAAKC,YAAYU,MAChD,uBAAGd,UAAU,kBAAkBG,EAAKC,YAAYW,OAChD,kBAAC,OAAD,CACEf,UAAU,4BACVa,GAAIV,EAAKE,OAAOC,MAFlB,aAMA,uBACEN,UAAU,+BACViB,KAAMd,EAAKC,YAAYc,QAEvB,kBAAC,SAAD,CAAQC,KAAM,c,GAhIVQ,IAAMC,WA4If7C,YAER,IAAM8C,EAAS","file":"component---src-pages-index-js-93c400e03caff4d28c4f.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Layout from '../components/Layout'\nimport SEO from '../components/seo'\nimport { rhythm } from '../utils/typography'\n\nimport { Medium } from '@icons-pack/react-simple-icons'\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMdx.edges\n    const tags = data.tagCollection.group\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title=\"StackCheats\"\n          keywords={[`stackcheats`, `blog`, `gatsby`, `javascript`, `react`]}\n        />\n\n        {/* horizontal scrollable card deck */}\n        <div className=\"card-deck-scrollable flex-nowrap overflow-auto  my-5\">\n          {posts.slice(0, 4).map(({ node }) => {\n            const title = node.frontmatter.title || node.fields.slug\n            return (\n              <div className=\"card p-4 rounded-lg\" key={node.fields.slug}>\n                <div className=\"card-body d-flex flex-column\">\n                  <h5\n                    className=\"card-title\"\n                    style={{\n                      marginBottom: rhythm(1 / 4),\n                    }}\n                  >\n                    <Link\n                      className=\"text-dark\"\n                      style={{\n                        textDecoration: `none`,\n                        boxShadow: `none`,\n                      }}\n                      to={node.fields.slug}\n                    >\n                      {title}\n                    </Link>\n                  </h5>\n                  <small className=\"text-muted\">{node.frontmatter.date}</small>\n                  <p className=\"card-text mt-3\">{node.frontmatter.short}</p>\n                  <div className=\"mt-auto\">\n                    <Link\n                      className=\"btn btn-sm btn-light\"\n                      style={{\n                        width: 'max-content',\n                      }}\n                      to={node.fields.slug}\n                    >\n                      Read More\n                    </Link>\n                    <a\n                      className=\"btn btn-sm ml-2 rounded\"\n                      style={{\n                        width: 'max-content',\n                      }}\n                      href={node.frontmatter.medium}\n                    >\n                      <Medium size={24} />\n                    </a>\n                  </div>\n                </div>\n              </div>\n            )\n          })}\n        </div>\n\n        {/* tag collection deck */}\n        <div className=\"mb-5\">\n          {tags\n            .sort((a, b) => {\n              return b.totalCount - a.totalCount\n            })\n            .slice(0, 10)\n            .map(({ fieldValue, totalCount }) => {\n              if (totalCount > 1) {\n                return (\n                  <Link key={fieldValue} to={`/tags/${fieldValue}`}>\n                    <span className=\"tag-badge badge badge-light \">\n                      {fieldValue} <b>#{totalCount}</b>\n                    </span>\n                  </Link>\n                )\n              }\n            })}\n        </div>\n\n        {/* card-columns deck */}\n        <div className=\"card-columns mb-5\">\n          {posts.map(({ node }) => {\n            const title = node.frontmatter.title || node.fields.slug\n            return (\n              <div\n                className=\"card p-4 rounded-lg\"\n                key={node.fields.slug}\n                style={{\n                  backgroundColor: node.frontmatter.bgcolor,\n                }}\n              >\n                <div className=\"card-body\">\n                  <h5\n                    className=\"card-title\"\n                    style={{\n                      marginBottom: rhythm(1 / 4),\n                    }}\n                  >\n                    <Link\n                      className=\"text-dark\"\n                      style={{\n                        textDecoration: `none`,\n                        boxShadow: `none`,\n                      }}\n                      to={node.fields.slug}\n                    >\n                      {title}\n                    </Link>\n                  </h5>\n                  <small className=\"text-muted\">{node.frontmatter.date}</small>\n                  <p className=\"card-text mt-3\">{node.frontmatter.short}</p>\n                  <Link\n                    className=\"btn btn-sm btn-light mt-3\"\n                    to={node.fields.slug}\n                  >\n                    Read More\n                  </Link>\n                  <a\n                    className=\"btn btn-sm ml-2 mt-3 rounded\"\n                    href={node.frontmatter.medium}\n                  >\n                    <Medium size={24} />\n                  </a>\n                </div>\n              </div>\n            )\n          })}\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMdx(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            short\n            medium\n            bgcolor\n          }\n        }\n      }\n    }\n    tagCollection: allMdx {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`\n"],"sourceRoot":""}