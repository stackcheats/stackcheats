{"version":3,"sources":["webpack:///./src/templates/tag.js"],"names":["TagsTemplate","render","tag","this","props","pageContext","data","allMdx","edges","totalCount","title","site","siteMetadata","countDescription","location","className","style","scale","display","marginBottom","rhythm","map","node","key","fields","slug","backgroundColor","frontmatter","bgcolor","textDecoration","boxShadow","to","date","short","React","Component","pageQuery"],"mappings":"g8BAMMA,E,gLACJC,OAAA,WAAU,IACAC,EAAQC,KAAKC,MAAMC,YAAnBH,IADD,EAEuBC,KAAKC,MAAME,KAAKC,OAAtCC,EAFD,EAECA,MAAOC,EAFR,EAEQA,WACPC,EAAUP,KAAKC,MAAME,KAAKK,KAAKC,aAA/BF,MAEFG,EAAgB,IAAOJ,EAAP,UACL,IAAfA,EAAmB,GAAK,KADJ,oBAItB,OACE,kBAAC,IAAD,CAAQK,SAAUX,KAAKC,MAAMU,SAAUJ,MAAOA,GAC5C,yBAAKK,UAAU,0BACb,qCACQ,0BAAMA,UAAU,uBAAuBb,IAE/C,uBACEa,UAAU,aACVC,MAAK,KACAC,aAAM,IADN,CAEHC,QAAQ,QACRC,aAAcC,YAAO,MAGtBP,GAEH,yBAAKE,UAAU,aACb,4BACGP,EAAMa,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACZ,OACE,4BACE,yBACEP,UAAU,sBACVQ,IAAKD,EAAKE,OAAOC,KACjBT,MAAO,CACLU,gBAAiBJ,EAAKK,YAAYC,UAGpC,yBAAKb,UAAU,aACb,wBAAIA,UAAU,mBACZ,kBAAC,OAAD,CACEA,UAAU,YACVC,MAAO,CACLa,eAAe,OACfC,UAAU,QAEZC,GAAIT,EAAKE,OAAOC,MAEfH,EAAKK,YAAYjB,QAGtB,2BAAOK,UAAU,cACdO,EAAKK,YAAYK,MAEpB,uBAAGjB,UAAU,iDACVO,EAAKK,YAAYM,kB,GAvDjBC,IAAMC,WAsElBnC,YAER,IAAMoC,EAAS","file":"component---src-templates-tag-js-184a259547120a62ffdb.js","sourcesContent":["import React from 'react'\n\nimport { Link, graphql } from 'gatsby'\nimport { rhythm, scale } from '../utils/typography'\nimport Layout from '../components/Layout'\n\nclass TagsTemplate extends React.Component {\n  render() {\n    const { tag } = this.props.pageContext\n    const { edges, totalCount } = this.props.data.allMdx\n    const { title } = this.props.data.site.siteMetadata\n\n    const countDescription = `#${totalCount} sheet${\n      totalCount === 1 ? '' : 's'\n    } have been tagged`\n\n    return (\n      <Layout location={this.props.location} title={title}>\n        <div className=\"content-container mt-5\">\n          <h2>\n            Tag : <span className=\"badge badge-primary\">{tag}</span>\n          </h2>\n          <p\n            className=\"text-muted\"\n            style={{\n              ...scale(-1 / 5),\n              display: `block`,\n              marginBottom: rhythm(1),\n            }}\n          >\n            {countDescription}\n          </p>\n          <div className=\"my-4 mb-5\">\n            <ul>\n              {edges.map(({ node }) => {\n                return (\n                  <li>\n                    <div\n                      className=\"card tags-card mb-3\"\n                      key={node.fields.slug}\n                      style={{\n                        backgroundColor: node.frontmatter.bgcolor,\n                      }}\n                    >\n                      <div className=\"card-body\">\n                        <h5 className=\"card-title mb-0\">\n                          <Link\n                            className=\"text-dark\"\n                            style={{\n                              textDecoration: `none`,\n                              boxShadow: `none`,\n                            }}\n                            to={node.fields.slug}\n                          >\n                            {node.frontmatter.title}\n                          </Link>\n                        </h5>\n                        <small className=\"text-muted\">\n                          {node.frontmatter.date}\n                        </small>\n                        <p className=\"card-text mt-0 text-muted font-weight-lighter\">\n                          {node.frontmatter.short}\n                        </p>\n                      </div>\n                    </div>\n                  </li>\n                )\n              })}\n            </ul>\n          </div>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default TagsTemplate\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMdx(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            short\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}